[tool.poetry]
name = "datasim"
version = "0.1.0"
description = ""
authors = ["Nagacharan Teja Tangirala <nagacharan.tangirala@tum.de>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
mesa = "^2.1.0"
pyarrow = "~12.0.0"
toml = "~0.10.2"
black = "^23.7.0"
ruff = "^0.0.285"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310', 'py311']

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.ruff]
line-length = 88
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "D", # pydocstyle
    "E", # Error
    "F", # pyflakes
    "I", # isort
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PGH", # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "S", # bandit
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # Warning
    "YTT", # flake8-2020
]

ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D401",
    "E402",
    "E501",
    "F401",
    "S311",
    "D200",
    "TRY003",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.pep8-naming]
staticmethod-decorators = [
    "pydantic.validator",
    "pydantic.root_validator",
]

[tool.codespell]
skip = 'poetry.lock,'